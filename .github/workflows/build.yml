# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a set of commands using the runners shell
      #- name: Execute Pump Scrpt
      #  run: |
      #
      #  deploy the IVR files and restart IVR.
      #

      # Runs a set of commands using the runners shell
      - name: Execute Pump Scrpt
        run: |
          mkdir -p test-reports
          rm -f test-reports/dbid.txt
          dbid=`curl -H "X-API-Key: 68d8b99bf8b69f583b9e6c4c82027d5d" -X PUT https://cloud.pump.cx/pump/rest/testrun/126`
          echo PumpCX Test Run: https://cloud.pump.cx/pump/test_run_ft.html?id=$dbid >> $GITHUB_STEP_SUMMARY
          curl -H "X-API-Key: 68d8b99bf8b69f583b9e6c4c82027d5d" -H "Content-Type: application/json" --request POST --data '{"url":"https://github.com/hamishca/IVR/actions/runs/${{ github.run_id }}","item":"${{ github.run_id }}","label": "Github Action Run ID"}' https://cloud.pump.cx/pump/rest/testrun/build_info/$dbid
          sleep 60
          while true; do
            rm -f test-reports/report.*
            curl -H "X-API-Key: 68d8b99bf8b69f583b9e6c4c82027d5d" https://cloud.pump.cx/pump/rest/testrun/report/$dbid -o test-reports/report.txt 
            cat test-reports/report.txt
            if grep -q testsuite test-reports/report.txt; then
              mv test-reports/report.txt test-reports/report.xml
              break
            fi
            if grep -q 'HTTP Status ' test-reports/report.txt; then
              rm -f test-reports/report.*    	
              break
            fi
            sleep 5
          done
        shell: bash
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: 'test-reports/report.*'
          include_passed: true
          skip_annotations: true
          fail_on_failure: true
          detailed_summary: true
